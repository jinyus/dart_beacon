# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart Test

on:
    workflow_dispatch:
    # push:
    #   branches: [ "main" ]
    pull_request:
        branches: ["main"]
        types: [opened, synchronize, reopened, ready_for_review]

jobs:
    # spell-check:
    #     uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    #     with:
    #         includes: "*.md"
    #         modified_files_only: true

    test:
        runs-on: ubuntu-latest

        if: github.event.pull_request.draft == false

        steps:
            - uses: actions/checkout@v4

            - uses: subosito/flutter-action@v2

            - name: Build and Test Core
              working-directory: ./packages/state_beacon_core
              run: |
                  flutter pub get
                  flutter analyze
                  flutter test --coverage

            - name: Build and Test Flutter
              working-directory: ./packages/state_beacon
              run: |
                  flutter pub get
                  flutter analyze
                  flutter test --coverage

            # - name: Build and Test Shopping Cart example
            #   working-directory: ./examples/shopping_cart
            #   run: |
            #       flutter pub get
            #       flutter analyze
            #       flutter test

            # - name: Build and Test Main example
            #   working-directory: ./examples/flutter_main
            #   run: |
            #       flutter pub get
            #       flutter analyze
            #       flutter test

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              with:
                  files: ./packages/state_beacon_core/coverage/lcov.info
                  flags: unittests
